/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        
        List<Integer>preOrder = new ArrayList<Integer>();
        if(root==null){
            return preOrder;
        }
        // Root Left Right
        TreeNode curr_root = root;
        Stack<TreeNode> st = new Stack<TreeNode>();
        st.push(root);
        
        while(!st.isEmpty()){
            // pop the root
            curr_root = st.pop();
            // push Right 
            if(curr_root.right!=null){
                st.push(curr_root.right);
            }
            // push left
            if(curr_root.left!=null){
                st.push(curr_root.left);
            }
            preOrder.add(curr_root.val);
            
        }
        return preOrder;
        
    }
}